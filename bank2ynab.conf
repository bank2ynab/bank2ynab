# bank2ynab configuration file

[DEFAULT]
# Specify where you save your downloaded CSV files:
Source Path = %USERPROFILE%\Downloads
# CHANGING ANYTHING BELOW THIS LINE WILL PROBABLY BREAK THINGS HORRIBLY. DON'T DO IT!
# Filename search
Source Filename Pattern = example_transaction_export_filename
Source Filename Extension = .csv
Use Regex for Filename = False
# Source file formatting
Source CSV Delimiter = ,
Header Rows = 1
Footer Rows = 0
Input Columns = Date,Payee,Outflow,Inflow,Running Balance
# (see https://docs.python.org/2/library/datetime.html#id1 for date format strings)
Date Format =
Inflow or Outflow Indicator =
# Output file formatting
Output Columns = Date,Payee,Category,Memo,Outflow,Inflow
Output Filename Prefix = fixed_
Use Payee for Memo = True
# Post-processing
Delete Source File = True
# Plugins
Plugin =
# YNAB API Stuff - don't modify values here, modify in user_configuration.conf
YNAB API Access Token =
YNAB Account ID =
Log Level = INFO


#####################################################################################################
# ADD CUSTOM BANKS BELOW.
# Just make a new [section heading] and copy only the lines from above that need a non-default value.
# Please keep this sorted alphabetically by [country + bank name] for easier maintenance.
#####################################################################################################
# DATE FORMATS:
# %y   2-digit year
# %Y   4-digit year
# %m   2-digit month number
# %b   3-char month name
# %B   full month name
# %d   2-digit day of the month
# %H   2-digit hour (24h)
# %M   2-digit minutes
# %S   2-digit seconds
# .-/:  Specify delimiter as provided in the input
# (see https://docs.python.org/2/library/datetime.html#id1 for date format strings)
#####################################################################################################

[AT easybank credit card]
# EASYBANK_Umsatzliste_20181009_2051.csv
Use Regex For Filename = True
Source Filename Pattern = EASYBANK_Umsatzliste_20[0-9]{6}_[0-9]{4}
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = skip,Memo,skip,Date,Inflow,skip
Date Format = %d.%m.%Y

[AT Raiffeisen Bank 2018]
# elbi_umsaetze_20123456789012.csv
Use Regex For Filename = True
Source Filename Pattern = elbi_umsaetze_20[0-9]{12}
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = skip,Memo,Date,Inflow,skip,skip,skip
Date Format = %d.%m.%Y

[AT Raiffeisen Bank RCM]
Source Filename Pattern = kta_ei
Source Filename Extension = .dat
Source CSV Delimiter = |
Input Columns = skip,Memo,Date,Payee,Inflow,Memo
Date Format = %Y%m%d
Plugin = RaiffeisenRCM

[AT Raiffeisen Bank 2019 checking]
# meinelba_umsaetze_AT273239500000141085_suche.csv
Use Regex For Filename = True
Source Filename Pattern = meinelba_umsaetze_AT[0-9]{18}_suche
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = skip,Memo,Date,Inflow,skip,skip,skip
Date Format = %d.%m.%Y

[AT Raiffeisen VISA]
# finstatus_20123456789012.csv
Use Regex For Filename = True
Source Filename Pattern = finstatus_20[0-9]{12}
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = skip,Payee,Memo,skip,skip,skip,Inflow
Date Format = %d.%m.%Y

[AU ANZ]
# Transactions.csv
Source Filename Pattern = ANZ
Header Rows = 0
Input Columns = Date,Inflow,Payee
Date Format = %d/%m/%y

[AU ING]
# Transactions.csv
Source Filename Pattern = Transactions
Header Rows = 1
# Double 'Inflow' looks strange but is correct
# The input csv uses 2 seperate columns, but has positive values
# for the inflows and negative values for the outflows
# The conversion will take those negative inflows and convert them to outflows
Input Columns = Date,skip,Payee,Inflow,Inflow
Date Format = %d/%m/%y

[AU National Australia Bank]
# TransactionExport.csv
Source Filename Pattern = TransactionHistory
Header Rows = 0
Input Columns = Date,Inflow,skip,skip,skip,Payee,Running Balance
Date Format = %d %b %y

[BE KBC checking]
# source: survey response #25
# export_BE11123456789012_20180304_1422.csv
Use Regex For Filename = True
Source Filename Pattern = export_BE[0-9]{14}_[0-9]{8}_[0-9]{4}
Source CSV Delimiter = ;
Input Columns = skip,skip,skip,skip,skip,Date,skip,skip,Inflow,skip,skip,skip,Payee,skip,skip,skip,skip,Memo
Date Format = %d/%m/%Y

[BE Keytrade Bank]
# source: survey response #44 and #49
# export.csv
Source Filename Pattern = export
# Uittreksel;Datum;Valutadatum;Rekening;Omschrijving;Bedrag;Valuta
Input Columns = skip,Date,skip,Payee,Memo,Inflow,skip
Date Format = %d.%m.%Y

[BR Banco do Brasil, checking]
# extrato.csv
Source Filename Pattern = extrato
Input Columns = Date,skip,Payee,skip,skip,Inflow
Date Format = %d/%m/%Y

[BR Inter, checking]
# source: survey response #17
# Extrato.csv
Source Filename Pattern = Extrato
Input Columns = Date,Payee,Inflow,skip
# Date Format = # unknown! # sent email to submitter on 05apr2019.

[CA TD Canada Trust, checking+Visa]
# source: survey response #26
Source Filename Pattern = accountactivity
Header Rows = 0
Input Columns = Date,Payee,Outflow,Inflow,skip
Date Format = %m/%d/%Y

[CH ZKB Erweiterte Suche]
# Erweiterte Suche - Kontoauszug, Buchungen 20190422162658.csv
Use Regex For Filename = True
Source Filename Pattern = ^Erweiterte Suche - Kontoauszug, Buchungen \d{14}
Header Rows = 1
Input Columns = Date,Payee,skip,skip,Outflow,Inflow
Date Format = %d.%m.%Y
Source CSV Delimiter = ;

[CH ZKB Finanzassistent-Chronik]
# Finanzassistent-Chronik.csv
Use Regex For Filename = True
Source Filename Pattern = ^Finanzassistent-Chronik
Header Rows = 1
Input Columns = Date,Category,skip,Inflow,Memo,Payee,skip
Date Format = %Y-%m-%d
Source CSV Delimiter = ;

[CZ AirBank checking and savings]
Use Regex For Filename = True
Source Filename Pattern = airbank_[0-9]{10}_[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{2}-[0-9]{2}
Source CSV Delimiter = ;
Header Rows = 1
Input Columns = Date,skip,skip,skip,skip,Amount,skip,skip,skip,Payee,skip,skip,skip,skip,skip,skip,skip,skip,skip,Memo,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip
Date Format = %d/%m/%Y

[CZ Ceska Sporitelna]
# Single page output: TH_20180520-20180520
# Paginated (Czech): TH_20180101-20180520_strana_1
# Paginated (English): TH_20180101-20180520_page_1
Use Regex For Filename = True
Source Filename Pattern = TH_[0-9]{8}-[0-9]{8}(_(page|strana)_[0-9])?
Source CSV Delimiter = ;
Header Rows = 1
Input Columns = skip,Date,Inflow,Payee,skip,skip,skip,skip,skip,skip,Memo
Date Format = %Y/%m/%d

[CZ Raiffeisen bank]
# Pohyby_1234512345_201805201112.csv (Czech)
# Movements_1234512345_201805201112.csv (English)
Use Regex For Filename = True
Source Filename Pattern = (Pohyby|Movements)_[0-9]{10}_[0-9]{12}
Source CSV Delimiter = ;
Header Rows = 1
Input Columns = Date,skip,skip,skip,skip,Payee,skip,skip,Memo,skip,skip,skip,skip,Inflow
Date Format = %d.%m.%Y

[DE Commerzbank checking]
# source: survey response #24
Use Regex For Filename = True
Source Filename Pattern = Umsaetze_KtoNr[0-9]{9}_EUR_[0-9]{2}-[0-9]{2}-[0-9]{4}_[0-9]{4}
Source Filename Extension = .CSV
Header Rows = 1
Source CSV Delimiter = ;
Input Columns = Date,skip,skip,Payee,Inflow,skip,skip,skip,skip
Date Format = %d.%m.%Y

[DE Consorsbank checking]
# source: survey response #36
Use Regex for Filename = True
Source Filename Pattern = Umsatz√ºbersicht_[0-9]{9}
Source CSV Delimiter = ;
Input Columns = Date,skip,Payee,skip,skip,skip,Memo,Inflow
Date Format = %d.%m.%Y

[DE Deutsche Bank]
# source: Issue #131
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Header Rows = 5
Footer Rows = 1
Source CSV Delimiter = ;
Input Columns = Date,skip,skip,skip,skip,skip,Inflow,skip
Date Format = %d.%m.%Y

[DE Deutsche Kreditbank checking]
# source: Issue #132
# 1234567890.csv
Use Regex For Filename = True
Source Filename Pattern = [0-9]{10}
Header Rows = 7
Source CSV Delimiter = ;
Input Columns = skip,Date,Memo,Payee,skip,skip,skip,Inflow,skip,skip,skip
Date Format = %d.%m.%Y

[DE Deutsche Kreditbank credit card]
# source: Issue #132
# 1234________1234.csv
Use Regex For Filename = True
Source Filename Pattern = \d{4}_{8}\d{4}
Header Rows = 7
Source CSV Delimiter = ;
Input Columns = skip,skip,Date,Memo,Inflow,skip
Date Format = %d.%m.%Y

[DE ING-DiBa]
Use Regex For Filename = True
# Umsatzanzeige_1234567890_12345678.csv
Source Filename Pattern = Umsatzanzeige_DE[0-9]{20}_[0-9]{8}
Source CSV Delimiter = ;
Header Rows = 13
Input Columns = Date,skip,Payee,skip,Memo,skip,skip,Inflow,skip

[DE Kreissparkasse]
# source: Issue #145
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Source CSV Delimiter = ;
Input Columns = Date,Payee,skip,skip,skip,Inflow,skip,skip
Date Format = %d.%m

[DE N26]
# source: survey response #15
# 20171001-20171106.csv
Use Regex For Filename = True
Source Filename Pattern = 20[0-9]{6}-20[0-9]{6}
Input Columns = Date,Payee,skip,skip,skip,skip,Inflow,skip,skip,skip
Date Format = %Y-%m-%d

[DE Ostseesparkasse Rostock checking]
Use Regex for Filename = True
# 12345678-1234567890-umsatz.csv
Source Filename Pattern = [0-9]{8}-[0-9]{10}-umsatz
Source Filename Extension = .CSV
Source CSV Delimiter = ;
Input Columns = skip,skip,Date,skip,Memo,Payee,skip,skip,Inflow,skip,skip
Date Format = %d.%m.%y

[DE Ostseesparkasse Rostock credit card]
# umsatz-1234________1234-20180227.csv
Use Regex for Filename = True
Source Filename Pattern = umsatz-[0-9]{4}_{8}[0-9]{4}-[0-9]{8}
Source Filename Extension = .CSV
Source CSV Delimiter = ;
Input Columns = skip,skip,Date,skip,skip,skip,Inflow,skip,Payee,Memo,skip,skip,skip,skip,skip,skip
Date Format = %d.%m.%y

[DE Sparkasse Rhein-Neckar-Nord]
# source: Issue #148
# 12345678-12345678-umsatz.csv
Use Regex For Filename = True
Source Filename Pattern = [0-9]{8}-[0-9]{8}-umsatz
Input Columns = skip,Date,skip,Memo,skip,skip,skip,skip,skip,skip,skip,Payee,skip,skip,Inflow,skip,skip
Date Format = %d.%m.%y

[DE Sparkasse S√ºdholstein]
Use Regex for Filename = True
Source Filename Pattern = [0-9]{8}-[0-9]{9}-umsatz
Source Filename Extension = .CSV
Header Rows = 1
Source CSV Delimiter = ;
Date Format = %d.%m.%y
Input Columns = skip,Date,skip,skip,Memo,skip,skip,skip,skip,skip,skip,Payee,skip,skip,Inflow,skip,skip

[DK Bankernes EDB Central]
# Support for all banks with a solution produced by Bankernes EDB Central
# Tested Banks: Arbejdernes Landsbank, Merkur Andelskasse, DK Handelsbanken,
# add more here..
Source Filename Pattern = Posteringer
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = Date,Payee,Inflow,Running Balance
Date Format = %d-%m-%Y

[DK Jyske Bank VISA]
# source: survey response #45
Source Filename Pattern = L√∏nkonto
# Dato,,Tekst,,Bel√∏b,Saldo,Kommentar,Afstemt,Flag,Konto
Input Columns = Date,skip,Payee,skip,Inflow,skip,Memo,skip,skip,skip

[DK Nordea]
# source: Issue #92
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Source CSV Delimiter = ;
Input Columns = Date,Payee,skip,Inflow,skip
Date Format = %Y-%m-%d

[DK Sparkassen Thy]
Source Filename Pattern = export
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = skip,Date,Payee,Inflow,Running Balance
Date Format = %d-%m-%Y

[HU Erste Bank checking]
# source: survey response #39
# source: https://i.imgur.com/aDtuAjg.png via reddit PM
Use Regex For Filename = True
# W80844_EBH_201945.202122.csv
Source Filename Pattern = [A-Z0-9]{6}_[A-Z]{3}_[0-9]{7}\.[0-9]{5}
Header Rows = 1
Input Columns = Date,skip,skip,skip,skip,skip,Inflow,skip,skip,skip,skip,skip,skip,Memo,skip,skip
Date Format = %Y.%m.%d.

[IE AIB Ireland]
# source: survey response #16
# Transaction_Export_12.12.2012_12.12.csv
Use Regex For Filename = True
Source Filename Pattern = Transaction_Export_[0-9]{2}.[0-9]{2}.20[0-9]{2}_[0-9]{2}.[0-9]{2}
Input Columns = skip,Date,Payee,Inflow,Outflow,skip,skip
# Date Format = # unknown!

[IE Bank of Ireland]
# TransactionExport.csv
Source Filename Pattern = TransactionExport
Input Columns = Date,Payee,Outflow,Inflow,skip
Date Format = %d/%m/%Y

[IE N26]
# n26-csv-transactions.csv
Source Filename Pattern = n26-csv-transactions
Input Columns = Date,Payee,skip,Memo,Memo,Memo,Inflow,skip,skip,skip
# 2019-08-13
Date Format = %Y-%m-%d

[IE Ulster Bank, savings]
# source: survey response #50
# ACCOUNTNAME12345678-20190812
Use Regex For Filename = True
Source Filename Pattern = ACCOUNTNAME[0-9]{8}-20[0-9]{6}
Source CSV Delimiter = ,
Header Rows = 1
# Date, Type, Description, Value, Balance, Account Name, Account Number
# 31/07/2019,POS,"'8656 30JUL19 C , LUAS TRANSDEV , DUBLIN , DUBLIN IE",-3.70,12345678,"ACCOUNT NAME","12345678"
Input Columns = Date,skip,Payee,Inflow,skip,skip,skip
Date Format = %d/%m/%Y

[IT RomagnaBanca Inbank]
# listamovimenticsv31_12_2018_18_58_03.csv
Use Regex For Filename = True
Source Filename Pattern = listamovimenticsv[0-9]{2}_[0-9]{2}_20[0-9]{2}_[0-9]{2}_[0-9]{2}_[0-9]{2}
Source CSV Delimiter = ;
Input Columns = Date,skip,Outflow,Inflow,skip,Memo,skip
Date Format = %d/%m/%Y

[Mint]
# source: #108
# MINT_HEADER=['Date','Payee','Memo','Amount','TransactionType','Category','AccountName','Labels','Notes']
Source Filename Pattern = transactions
Source CSV Delimiter = ,
Source Has Column Headers = True
Input Columns = Date,Payee,skip,Memo,Inflow,Category
# Date Format = # unknown!

[MV Bank of Maldives, checking]
# source: survey response #18
# statement.csv
Use Regex For Filename = True
Source Filename Pattern = statement\.
Input Columns = Date,skip,skip,skip,skip,Memo,skip,skip,Inflow,Outflow,skip
# Date Format = # unknown! # sent email to submitter on 05apr2019.

[NETELLER]
Source Filename Pattern = NETELLER_transaction_history
Input Columns = skip,skip,skip,Payee,Date,skip,Inflow,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip
Date Format = %d-%m-%Y / %H:%M

[NL Bunq checking]
# source: survey response #28
Use Regex for Filename = True
# 2018-04-14_10-52-13_bunq-transactieoverzicht
# 2019-03-02_11-50-46_bunq-statement.csv
Source Filename Pattern = [0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{2}-[0-9]{2}-[0-9]{2}_bunq-(transactieoverzicht|statement)
Header Rows = 1
Input Columns = Date,Inflow,skip,skip,Payee,Memo
Date Format = %Y-%m-%d

[NL bunqDesktop software]
# source: survey response #41
# Bunq is already supported, but this is some info for the 3rd party, open-source, BunqDesktop application for Windows, Mac and Linux.
Use Regex for Filename = True
# bunq-export.2019-03-30_2019-04-30_371195
Source Filename Pattern = bunq-export\.[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{6}
Source CSV Delimiter = ;
# "Datum";"Bedrag";"Rekening";"Tegenrekening";"Naam";"Omschrijving"
# Date	Amount	Account from	Account receiving	Name account holder	Description
# "2019-04-09";"0,40";"NL63BUNQ2031783591";"NL58BUNQ4490788981";"J.Doe";""
Input Columns = Date,Inflow,skip,Payee,skip,Memo
Date Format = %Y-%m-%d

[NL bunqDesktop software 2]
source: personal email
# bunqdesktop-export.2019-03-30_2019-04-30
Source Filename Pattern = bunqdesktop-export\.[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{4}-[0-9]{2}-[0-9]{2}
Source CSV Delimiter = ;
Input Columns = Date, skip,Inflow,skip,Payee,skip,Memo,skip,skip,skip,skip,skip,skip,skip
Date Format = %Y-%m-%d

[NL ING]
# NL12INGB123456789_12_12_2012_12_12_2012.csv
Use Regex for Filename = True
Source Filename Pattern = NL[0-9]{2}INGB[0-9]{9}_[0-9]{2}_[0-9]{2}_20[0-9]{2}_[0-9]{2}_[0-9]{2}_20[0-9]{2}
Header Rows = 1
Footer Rows = 0
Input Columns = Date,Payee,skip,skip,skip,CDFlag,Inflow,skip,Memo
Date Format = %Y%m%d
Inflow or Outflow Indicator = 5,Af,Bij

[NL Rabobank]
# source: survey response #14
# transactions.txt
Source Filename Pattern = transactions
Source Filename Extension = .txt
Source Has Column Headers = False
Input Columns = skip,skip,Date,CDFlag,Inflow,skip,Payee,skip,skip,skip,Memo,skip
Date Format = %Y%m%d
Inflow or Outflow Indicator = 3,C,D

[NL Rabobank-2018]
# CSV_A_20180414_112204.csv
Use Regex for Filename = True
Source Filename Pattern = CSV_A_20[0-9]{6}_[0-9]{6}
# "IBAN/BBAN","Munt","BIC","Volgnr","Datum","Rentedatum","Bedrag","Saldo na trn","Tegenrekening IBAN/BBAN","Naam tegenpartij","Naam uiteindelijke partij","Naam initi√´rende partij","BIC tegenpartij","Code","Batch ID","Transactiereferentie","Machtigingskenmerk","Incassant ID","Betalingskenmerk","Omschrijving-1","Omschrijving-2","Omschrijving-3","Reden retour","Oorspr bedrag","Oorspr munt","Koers"
Input Columns = skip,skip,skip,skip,Date,skip,Inflow,skip,skip,Payee,skip,skip,skip,skip,skip,skip,skip,skip,skip,Memo,skip,skip,skip,skip,skip,skip
Date Format = %Y-%m-%d

[NO DNB]
# source: survey response #12
# maanedtransaksjonliste-[a-z]{3}.csv
Use Regex for Filename = True
Source Filename Pattern = maanedtransaksjonliste-[a-z]{3}
Source CSV Delimiter = ;
Input Columns = Date,Payee,skip,Outflow,Inflow
Date Format = %d.%m.%Y

[NO Sparebank 1 VISA]
# source: survey response #42
Use Regex for Filename = True
Source Filename Pattern = # OversiktKonti-\d{2}.\d{2}.\d{4}-\d{2}.\d{2}.\d{4}
# OversiktKonti-01.04.2019-05.05.2019
Source CSV Delimiter = ;
Header Rows = 1
Input Columns = Date,Payee,skip,Inflow,Inflow,skip,skip
# Dato;Beskrivelse;Rentedato;Inn;Ut;Til konto;Fra konto;
# "05.05.2019";"Nettbank";"05.05.2019";"994,00";;"12345678956";;

[Personal Capital]
# source: Issue #144
# Feb 12-2012 thru Apr 12-2012 transactions.csv
Use Regex For Filename = True
Source Filename Pattern = [A-Z][a-z]{2} [0-9]{2}-[0-9]{4} thru [A-Z][a-z]{2} [0-9]{2}-[0-9]{4} transactions
Header Rows = 1
Input Columns = Date,Payee,Memo,skip,skip,Inflow
Date Format = %Y-%m-%d

[PL mBank]
# source: survey response #51
# eKonto_12345678_190801_190916
Source Filename Pattern = eKonto_[0-9]{8}_[0-9]{6}_[0-9]{6}
Use Regex For Filename = True
#Data operacji	#Data ksiƒôgowania	#Opis operacji	#Tytu≈Ç	#Nadawca/Odbiorca	#Numer konta	#Kwota	#Saldo po operacji
# # Operation date # Posting date # Operation description # Title # Sender / Receiver # Account number # Amount # Balance after operation
Input Columns = Date,skip,Memo,skip,Payee,skip,Inflow,skip
Header Rows = 1


[SE Handelsbanken]
# kontotransactionlist.xls
Source Filename Pattern = kontotransactionlist
Source Filename Extension = .xls
Input Columns = skip,Date,Payee,Inflow,skip
Source CSV Delimiter = ;
Header Rows = 7
Plugin = handelsbanken
# Date Format = # unknown!

[SE L√§nsf√∂rs√§kringar checking]
# source: survey response #43 and #46 and email correspondence
# Mitt konto senaste transaktioner 2019-05-28.csv
# Privatkonto senaste transaktioner 2019-06-30.csv
Use Regex for Filename = True
Source Filename Pattern = .*konto senaste transaktioner [0-9]{4}-[0-9]{2}-[0-9]{2}
Source CSV Delimiter = ;
Header Rows = 1
# "Bokf√∂ringsdatum";"Transaktionsdatum";"Transaktionstyp";"Meddelande";"Belopp";"Kontonummer";"Kontonamn";"";"Saldo";"Tillg√§ngligt belopp"
Input Columns = skip,Date,skip,Payee,Inflow,skip,skip,skip,skip,skip

[SE Nordea]
# source: Issue #92
# export.csv
Source Filename Pattern = export
Source CSV Delimiter = ,
Header Rows = 1
Footer Rows = 1
Input Columns = Date,Payee,Outflow,Inflow,Running Balance
Date Format = %Y-%m-%d

[SE SEB Skandinaviska Enskilda Banken]
Source Filename Pattern = Export
Source CSV Delimiter = ,
Header Rows = 5
Input Columns = Date,skip,skip,Memo,Inflow,skip
Date Format = %Y-%m-%d

[SE Sparbanken Tanum]
# source: survey response #48
# exported.csv
Use Regex For Filename = True
Source Filename Pattern = export-\d*
Header Rows = 0
# Swish V√ÑSTTRAFIK AB;2019-07-14;2019-07-15;-28,00;24 207,40
Input Columns = Payee,Date,skip,Inflow,skip
Date Format = %Y-%m-%d

[SE Swedbank]
# source: Issue #134
# exported.csv
Source Filename Pattern = exported
Header Rows = 2
Footer Rows = 3
Input Columns = skip,skip,Date,Payee,Memo,Inflow,skip,CDFlag,skip,skip,skip,skip,skip,skip,skip
Inflow or Outflow Indicator = 7,K,D
Date Format = %Y/%m/%d

[SE Swedbank 2019]
# source: survey response #47
# export.csv
Source Filename Pattern = export
Input Columns = Payee,Date,skip,Inflow,skip
Date Format = %Y-%m-%d

[SG OCBC Bank]
Use Regex For Filename = True
Source Filename Pattern = TransactionHistory_\d{4}\d{2}\d{2}\d{6}
Header Rows = 6
Footer Rows = 2
Input Columns = Date,skip,Memo,Outflow,Inflow,Payee
Date Format = %d/%m/%Y
Plugin = OCBC_Bank_SG

[SG POSB savings]
# source: survey response #23
Source Filename Pattern = [0-9a-z]{32}.[A-Z][0-9]{15}
Use Regex for Filename = True
Header Rows = 0
Input Columns = Date,skip,Outflow,Inflow,Payee,Memo,skip
Date Format = %d %b %Y

[SK Tatra Banka]
Source Filename Pattern = download-[0-9]{2}.[0-9]{2}.20[1-9][0-9]
Source Filename Extension = .csv
Use Regex For Filename = True
Header Rows = 1
Footer Rows = 0
Source CSV Delimiter = ,
Input Columns = skip,Date,Inflow,skip,CDFlag,skip,skip,skip,Payee,skip,skip,skip,skip,skip,Memo
Inflow or Outflow Indicator = 4,Kredit,Debet
Date Format = %d.%m.%Y

[SK VUB]
Source Filename Pattern = SK030200[0-9]{16}_export_(of_movements_on_the_account|pohybov_na_ucte)
Source Filename Extension = .CSV
Use Regex For Filename = True
Header Rows = 1
Footer Rows = 0
Source CSV Delimiter = ,
Input Columns = Date,skip,Payee,skip,Payee,Inflow,skip,skip,skip,skip,skip,Memo,skip,skip,skip
Date Format = %Y%m%d

[UK Co-operative Bank]
# 123456_12345678_2012-12-12.csv
Use Regex for Filename = True
Source Filename Pattern = [0-9]{6}_[0-9]{8}_[0-9]{4}-[0-9]{2}-[0-9]{2}
Input Columns = Date,Payee,Memo,Inflow,Outflow,skip
# Date Format = # unknown!

[UK Monzo checking]
# MonzoDataExport_February2018_2018-02-26_174335.csv
Source Filename Pattern = MonzoDataExport_(January|February|March|April|May|June|July|August|September|October|November|December)[0-9]{4}_[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{6}
Use Regex for Filename = True
Input Columns = skip,Date,Inflow,skip,skip,skip,Category,skip,Payee,skip,Memo,skip
Date Format = %Y-%m-%d %H:%M:%S +0000

[UK Barclaycard credit card]
# statement_1.csv
Source Filename Pattern = statement_[0-9]{1}
Use Regex for Filename = True
Header Rows = 0
Input Columns = Date,Payee,skip,skip,skip,Category,Inflow,Outflow
Date Format = %d %b %y

[UK Barclaycard Business Credit Card]
# source: reddit
# Recent-16-04-2019.csv
Source Filename Pattern = Recent[0-9]{2}-[0-9]{2}-[0-9]{4}
Use Regex for Filename = True
Header Rows = 1
Source CSV Delimiter = ,
# Cardholder Name Account Number  Transaction Date    Merchant Name   Amount  Currency    Original Amount Original Currency   Conversion Rate Posted Date Transaction Time    Authorisation Code  Transaction ID  Merchant Category   Transaction Type    MCC Description Merchant Town/City  Merchant County/State   Merchant Post code/Zipcode  MCC Statement Cycle
# ****9940    10/04/2019  FOOD WORKS TURKISH KIT  10  GBP 10  GBP 1   12/04/2019  182500  28271   MCOIE5VFJ   Restaurants and Bars    PURCHASE    Eating Places, Restaurants  LONDON  SW1P        SW1P 2HY    5812
Input Columns = skip,skip,Date,Payee,skip,Outflow,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip,skip
Date Format = %d/%m/%Y

[UK first direct checking]
# 20123456_12345678.csv
Source Filename Pattern = 20[0-9]{6}_[0-9]{8}
Use Regex for Filename = True
Input Columns = Date,Payee,Inflow,skip
# Date Format = # unknown!

[UK John Lewis Partnership Card]
# MRS_JANE_SMITH_01-11-2019_01-12-2019.csv
Source Filename Pattern = [A-Z_]*_[0-9]{2}-[0-9]{2}-[0-9]{4}_[0-9]{2}-[0-9]{2}-[0-9]{4}
Use Regex for Filename = True
Plugin = JLP_Card_UK
Input Columns = Date,Payee,Outflow,skip
Header Rows = 1
Date Format = %d-%b-%Y

[US Bank of America]
# stmt-12.csv
Use Regex For Filename = True
Source Filename Pattern = stmt(-\d+)?
Header Rows = 7
Input Columns = Date,Payee,Outflow,skip
Date Format = %m/%d/%Y

[US Bank of America Credit Card]
# October2018_9999.CSV
Source Filename Pattern = ((Jan|Febr)uary|March|April|May|(Ju(ne|ly))|August|((Sept|Nov|Dec)ember)|October)[0-9]{4}_[0-9]{4}
Use Regex for Filename = True
Header Rows = 1
Footer Rows = 0
Input Columns = Date,skip,Memo,skip,Inflow
Date Format = %m/%d/%Y

[US BB&T]
# source: Issue #115
# EXPORT.CSV
Source Filename Pattern = EXPORT
Source Filename Extension = .CSV
Header Rows = 1
Footer Rows = 0
Input Columns = Date,skip,skip,Payee,Inflow,skip
# Date Format = # unknown!

[US Chase Credit Card 2017]
# Chase9999_Activity_Stmt_YYYYMMDD.CSV
# Chase9999_RecentActivity_YYYYMMDD.CSV
Source Filename Pattern = Chase[0-9]{4}_(Activity_Stmt|RecentActivity)_[0-9]{8}
Source Filename Extension = .CSV
Use Regex for Filename = True
Input Columns = skip,Date,skip,Memo,Inflow
Date Format = %m/%d/%Y

[US Chase Credit Card 2019]
# Chase9999_Activity20190416_20190416_20190416.CSV
Source Filename Pattern = Chase[0-9]{4}_Activity[0-9]{8}(_[0-9]{8})*
Source Filename Extension = .CSV
Use Regex for Filename = True
Input Columns = skip,Date,skip,Memo,skip,skip,Inflow
Date Format = %m/%d/%Y

[US Schwab]
# source: Issue #122
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Header Rows = 3
Footer Rows = 0
Input Columns = Date,skip,skip,Payee,Outflow,Inflow,skip
Date Format = %m/%d/%Y

[US TB Bank]
# source: Issue #123
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Header Rows = 0
Footer Rows = 0
Input Columns = Date,skip,skip,skip,Payee,Outflow,Inflow,skip,skip,skip
Date Format = %m/%d/%Y
